name: release

on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+
  workflow_dispatch:
    inputs:
      tag:
        description: The existing tag to publish to FlakeHub
        type: string
        required: true

jobs:
  create_release:
    name: create_release
    runs-on: ubuntu-latest
    if: github.event_name != 'workflow_dispatch'
    steps:
      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          body: "[Changelog](https://github.com/nix-community/nix-melt/blob/main/CHANGELOG.md)"

  release:
    name: release
    needs: create_release
    runs-on: ${{ matrix.os }}
    if: github.event_name != 'workflow_dispatch'
    strategy:
      matrix:
        include:
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: x86_64-pc-windows-gnu
            os: windows-latest
            ext: .exe
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            ext: .exe
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cargo build
        run: |
          rustup toolchain install nightly --profile minimal -t ${{ matrix.target }}
          cargo +nightly build --release --target ${{ matrix.target }}
        env:
          RUSTFLAGS: -C strip=symbols

      - name: Upload asset
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ github.token }}
          tag: ${{ github.ref }}
          file: target/${{ matrix.target }}/release/nix-melt${{ matrix.ext }}
          asset_name: nix-melt-${{ matrix.target }}${{ matrix.ext }}

  artifacts:
    name: artifacts
    needs: create_release
    runs-on: ubuntu-latest
    if: github.event_name != 'workflow_dispatch'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cargo build
        run: |
          rustup toolchain install nightly --profile minimal
          cargo +nightly build
        env:
          GEN_ARTIFACTS: artifacts

      - name: Rename generated artifacts
        run: |
          mv artifacts/{_,}nix-melt.ps1
          mv artifacts/{_nix-melt,nix-melt.zsh}

      - name: Upload artifacts
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ github.token }}
          tag: ${{ github.ref }}
          file: artifacts/*
          file_glob: true

  flakehub:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.tag != null && format('refs/tags/{0}', inputs.tag) || '' }}
      - uses: DeterminateSystems/nix-installer-action@v9
      - uses: DeterminateSystems/flakehub-push@v3
        with:
          visibility: public
          tag: ${{ inputs.tag }}
